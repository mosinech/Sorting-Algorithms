var app=angular.module("palindromeApp",[]);
app.controller("palindromeCtrl",["$scope",function(a){a.input={};a.input.text="";a.results={};a.results.show=!1;a.results.palindrome=!1;a.error=!1;a.palindrome=function(){a.results.show=!0;a.results.text=a.input.text;a.results.palindrome=palindromeModule.containsPalindrome(a.input.text)};QUnit.test("Palindrom Detection Test",function(a){a.equal(palindromeModule.containsPalindrome("abcdabcdabcd"),!1);a.equal(palindromeModule.containsPalindrome("aPop"),!0);a.equal(palindromeModule.containsPalindrome("Ah, Satan sees Natasha"),
!0);a.equal(palindromeModule.containsPalindrome("a"),!1);a.equal(palindromeModule.containsPalindrome("akcab#$ ad, abc"),!0);a.equal(palindromeModule.containsPalindrome("t00k."),!0)})}]);
var palindromeModule=function(){return{containsPalindrome:function(a){a=a.replace(/[^a-z0-9]/gi,"").toLowerCase().split("");if(1==a.length)return!1;for(var b=1;b<a.length-1;b++)if(a[b-1]==a[b+1]||a[b]==a[b+1]||a[b]==a[b-1])return!0;return!1},longestPalindrome:function(a){var b=0;a=("$#"+a.split("").join("#")+"#").split("");for(var d=Array.apply(null,Array(a.length)).map(Number.prototype.valueOf,0),c=1;c<p.length;c++){for(d[c]=b-c?Math.min(d[2*b-1],b-1):1;a[c+d[c]]==a[c-d[c]];)d[c]++;c+d[c]>b&&(b=
c+d[c])}}}}();
